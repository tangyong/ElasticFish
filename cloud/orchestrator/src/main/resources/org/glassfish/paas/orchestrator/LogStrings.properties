#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2011-2012 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
# or packager/legal/LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at packager/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

delete.cluster.exec.output=Command delete-cluster [ {0} ] executed.Command output [{1}]
create.cluster.exec.output=Command create-cluster [ {0} ] executed.Command output [{1}]

discovered.plugins=Discovered Plugins : [ {0} ]

no.such.task.to.initiate.rollback=No such task [ {0} ] found to initiate RollBack.
scale.services=Scaling Service [{0}] for Application [ {1} ] by [ {2} ] instances.
scale.service.using.plugin=Scale service [ {0} ] using plugin [ {1} ]

unable.tocreate.spe=Unable to create 'service-provisioning-engines' config {0}
added.instance=A new {0} was added. {1}
changed.instance=A {0} was changed.  {1}
removed.instance=A {0} was removed. {1}

new.provisioned.service=New provisioned service [ {0} ] after scaling [ {1} }
reassociate.provisionedservice.serviceref=Re-associating new ProvisionedService [ {0} ] for ServiceReference [{1}] through {2}
associate.provisionedservice=Associating ProvisionedService [ {0} ] for ServiceReference [ {1} ] through plugin [ {2} ]
dissociate.provisionedservice=Dissociating ProvisionedService [ {0} ] for ServiceReference [ {1} ] through plugin [ {2} ]

rollingback.provisionedservice=RollingBack provisioned service for {0} through {1}
rolledback.provisionedservice=RolledBack provisioned service for {0} through {1}

failure.while.dissociating.service=Failure while dissociating {0} and {1} via service-reference {2}. {3}
execution.stop.service=Exception while stopping service [ {0} ] for application [ {1} ]. {2}
execution.start.service=Exception while starting service [ {0} ] for application [ {1} ]. {2}
unable.retrieve.serviceinfo=Unable to retrieve service-info for service [ {0} ] of application : [ {1} ]

undeploying.app=Undeploying application [ {0} ]. Status: [ {1} ]

discovered.declared.metadata=Discovered declared service metadata via glassfish-services.xml = {0}
after.implicit.SD=After adding Implicit ServiceDescriptions: {0}
final.servicemetadata=Final Service MetaData: {0}


unable.to.register.listenersto.servicesconfig=Unable to register listener to <services> configuration
shared.service.added=Shared service {0} added.














