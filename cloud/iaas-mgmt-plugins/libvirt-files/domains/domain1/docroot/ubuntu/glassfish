#!/bin/sh
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2011-2012 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
# or packager/legal/LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at packager/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.

if [ ! -e /etc/opt/glassfishvm/cust ]; then
    mkdir -p /etc/opt/glassfishvm/cust
fi

sudo mount -t iso9660 /dev/cdrom /etc/opt/glassfishvm/cust

# get the IP address of this instance
intf=`awk < /proc/net/dev '
{   if ($1 ~ /^eth/) {
        split($1,field, ":")

        print(field[1])
    }
}'`

echo "Using $intf network interface"
numTries=0
while [ -z  $ip_address ]
do
    ip_address=`/sbin/ifconfig $intf  | grep 'inet addr:'| grep -v '127.0.0.1' | cut -d: -f2 | awk '{ print $1}'`
    ifconfig $intf
    numTries=`expr $numTries + 1`
    echo "I have tried $numTries times"
    if [ $numTries -eq 5 ]; then
        exit 1
    fi
    if [ -z $ip_address ]; then
        dhclient $intf
    fi
done

GLASSFISH_HOME=${GLASSFISH_HOME:-"/opt/glassfishvm/glassfish3"}

if [ ! -e /etc/opt/glassfishvm/configured_ip ]; then

    if [ ! -e /etc/opt/glassfishvm/cust/customization ]; then
        echo "Image not configured"
        exit 1
    fi

    echo "my master is $GroupMasterMachine and the port is $GroupMasterPort, my IP is $ip_address"

    . /etc/opt/glassfishvm/cust/customization
    vmName=`echo $Group_$Machine_$MachineAlias`

    if [ -z $AuthToken ]; then
        echo "No authentication token provided in the customization file"
        exit 1
    else

        if [ -e /etc/opt/glassfishvm/cust/id_dsa.pub ]; then
            echo "Installing public key"
            if [ ! -e /home/$UserName/.ssh ]; then
                sudo -u $UserName mkdir /home/$UserName/.ssh
            fi
            sudo -u $UserName cat /etc/opt/glassfishvm/cust/id_dsa.pub | sudo -u $UserName tee -a /home/$UserName/.ssh/authorized_keys2 >/dev/null
        fi
        if [ -e /etc/opt/glassfishvm/cust/id_rsa.pub ]; then
            echo "Installing public key"
            if [ ! -e /home/$UserName/.ssh ]; then
                sudo -u $UserName mkdir /home/$UserName/.ssh
            fi
            sudo -u $UserName cat /etc/opt/glassfishvm/cust/id_rsa.pub | sudo -u $UserName tee -a /home/$UserName/.ssh/authorized_keys2 >/dev/null
        fi

        echo "$DASAddress   $DAS    # added by glassfish" >>/etc/hosts

        echo "$GLASSFISH_HOME/bin/asadmin -H $GroupMasterMachine -p $GroupMasterPort --_authtoken $AuthToken register-virtual-machine --group $Group --machine $Machine --address $ip_address --sshuser cloud --installdir $GLASSFISH_HOME --cluster $Cluster $MachineAlias"
        $GLASSFISH_HOME/bin/asadmin -H $GroupMasterMachine -p $GroupMasterPort --_authtoken $AuthToken register-virtual-machine --group $Group --machine $Machine --address $ip_address --sshuser cloud --installdir $GLASSFISH_HOME --cluster $Cluster $MachineAlias
        if [ $? -eq 0 ]; then
            echo $ip_address >/etc/opt/glassfishvm/configured_ip
        else
            echo "Asadmin register instance returned $?"
        fi
    fi
else
    configured_ip_address=`cat /etc/opt/glassfishvm/configured_ip`

    . /etc/opt/glassfishvm/cust/customization

    nodeName=`echo $Group"_"$Machine"_"$MachineAlias`

    echo "Comparing $ip_address and $configured_ip_address"
    if [ $ip_address != $configured_ip_address ]; then

		$GLASSFISH_HOME/glassfish/bin/asadmin -H $GroupMasterMachine -p $GroupMasterPort --_authtoken $AuthToken update-node-ssh --nodehost $ip_address $nodeName
        if [ $? -eq 0 ]; then
            echo $ip_address >/etc/opt/glassfishvm/configured_ip
            sync
        fi
    fi

    # notify the vm is up.
    echo "$GLASSFISH_HOME/glassfish/bin/asadmin -H $GroupMasterMachine -p $GroupMasterPort --_authtoken $AuthToken2 register-startup $ip_address --group $Group --machine $Machine --address $ip_address --cluster $Cluster $nodeName"
    $GLASSFISH_HOME/glassfish/bin/asadmin -H $GroupMasterMachine -p $GroupMasterPort --_authtoken $AuthToken2 register-startup --group $Group --machine $Machine --address $ip_address --cluster $Cluster $nodeName
fi
